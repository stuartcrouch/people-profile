<?php
/**
 * Author: Stuart Crouch
 *
 *
 */

// Include the ou_profile local functions so we can use the log command
$INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
require_once "$INCLUDES/local_functions.inc";


/**
 * Implementation of hook_cron().
 *
 * Run the appropriate cron job for each OU website that uses this module
 * Notes:
 * 1, Client cron checks the database of allowed sites so no need to check here
 * 2, OUBS reporting keeps its own copies of PIMS data so needs to run client and server crons
 * 3, Run the server cron before the client cron on OUBS reporting
 *
 */
function ou_profile_cron() {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/../includes";
  require_once "$INCLUDES/local_functions.inc";
  // site is allowed to access the profiles system
  watchdog("ou_profile_client", "Running client cron");
  include "client_cron.inc"; // run cron for client including OUBS reporting

}

///////////////////////////////////
// NEW NODE API FUNCTIONS
///////////////////////////////////
$user_is_admin = FALSE;
$staff_id = NULL;
$oucu = NULL;

function ou_profile_client_node_load($nodes, $types) {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/local_functions.inc";
  ou_profile_log("in ou_profile_node_load");

  if (count(array_intersect(array("profile", "ou_profile"), $types))) {

    foreach ($nodes as $node) {

       // Note - node types are as follows:
       //    ou_profile: used only on the client, contains only the staff id
       //    profile: used only on the server - this is the full profile

       ou_profile_log("ou_profile_node_load $node->type");

       switch ($node->type) {
         case "ou_profile":

          // If we are asked to load this specific node,actually make a REST call and get the data
          $params = explode('/', $_GET['q']);
          if ((isset($params[0]) && $params[0] == 'node') && 
              (isset($params[1]) && $params[1] == $node->nid)) {
            if (isset($node->field_pims_unique_id[$node->language][0]['value'])) {
              $unique_id = $node->field_pims_unique_id[$node->language][0]['value'];
              $staff_id = substr($unique_id, 0,  8);
              $node->ou_profile = ou_profile_client_rest_call($staff_id);
              $node->oucu = $node->ou_profile["oucu"];
              unset( $node->ou_profile["oucu"] );
            }
            break;
          }
           // If we arent looking at the node page 
           //(eg we are getting a list instead), then just exit this function
           // and let drupal return whats in the database
       }
    }
  }
}

function ou_profile_client_rest_call($param) {


  $env = strtolower(getenv('OUENV'));
  switch ($env) {
    case 'live':
      $request_url = 'http://www.open.ac.uk/people/';
      break;

    case 'acct':
      $request_url = 'http://www-acct.open.ac.uk/people/';
      break;

    case 'dev':
    case 'test':
    default:
      $request_url = 'http://www-' . $env . '.open.ac.uk/people/';
  }
  
  //SSK-DEVTEST
  $request_url = 'http://localhost/pp_server/';
  
  $headers = array();
  $options = array(
      'headers' => array(
          'Accept' => 'application/json',
          'Referer' => $GLOBALS['base_url'],
      ),
      'method' => 'GET',
      //'data' => $data
  );

  $response = drupal_http_request($request_url . 'services/ou_site_profile/' . $param, $options);
  $data = json_decode($response->data,true);

  return $data;
}

/////////////////////////////////////////////// VIEW NODES //////////////////////////////////////////////


function ou_profile_client_node_view($node, $view_mode, $langcode) {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/local_functions.inc";
  ou_profile_log("ou_profile_node_view");

  drupal_add_css(drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css');
  drupal_add_js( drupal_get_path('module', 'ou_profile') .'/shared/oro_data.js');
  
  switch ($node->type) {
    case "profile":
      ou_profile_node_view_profile($node, $view_mode, $langcode);
      break;
    case "profile_page":
      ou_profile_node_view_profile_page($node, $view_mode, $langcode);
      break;
  }
}

function ou_profile_client_theme ($existing, $type, $theme, $path){
    $theme_path = drupal_get_path('module', 'ou_profile_client') . "/../shared";
    return array(
        'node--profile' => array(
            'variables' => array('content' => NULL, 'node' => NULL, 'classes' => NULL),
            'template' => 'node--profile',
            'path' => $theme_path,
        ),
        'page--profile' => array(
            'variables' => array('content' => NULL, 'node' => NULL, 'classes' => NULL),
            'template' => 'page--profile',
            'path' => $theme_path,
        )
    );
}

function ou_profile_client_preprocess_node(&$vars) {
  // Here is the way to switch to a different node-<something> template based on node properties.
  // We use this so that profile and ou_profile can share the same template file.
  if ($vars['type'] == 'profile' || $vars['type'] == 'ou_profile') {

    ou_profile_log("ou_profile_client_preprocess_node");

    $vars['theme_hook_suggestions'] = array(
          'node--profile',
    );
  }

  return $vars;
}

function ou_profile_client_preprocess_page(&$vars) {
  // Dont do these suggestions if we are on the edit page.
  // Cant find a better way to tell if thats where we are...
  $params = explode('/', $_GET['q']);
  if (isset($params[2]) && $params[2] == 'edit')
    return $vars;
    
    ou_profile_log("ou_profile_client_preprocess_page");

  // Here is the way to switch to a different page-<something> template based on node properties.
  // We use this so that profile and ou_profile can share the same template file.
  if (isset($vars['node'])) {

    if ($vars['node']->type == 'profile' || $vars['node']->type == 'ou_profile') {

      $vars['theme_hook_suggestions'] = array(
          'page--profile',
      );
    }
  }

  return $vars;

}
function ou_profile_client_preprocess_html(&$vars) {
  ou_profile_client_add_body_classes($vars);
}

function ou_profile_client_add_body_classes(&$vars) {
  // Do an easy check to see if this is a profile page  
  if (in_array('node-type-ou-profile', $vars['classes_array'])) {
    if (isset($vars['page']['content']['system_main']['nodes'])) {
      $node = reset($vars['page']['content']['system_main']['nodes']);
      if (isset($node)) {
        // Any changes to the server admin page layout means this array needs re-writing....
        if (isset($node['#node']->ou_profile['pdata']['group_layout_design']['group_layout']['field_oup_profile_layout']['value']['und'][0]['value'])) {
          $vars['classes_array'][] = $node['#node']->ou_profile['pdata']['group_layout_design']['group_layout']['field_oup_profile_layout']['value']['und'][0]['value'];
        }
        if (isset($node['#node']->ou_profile['pdata']['group_layout_design']['group_light_dark']['field_oup_profile_layout_colour']['value']['und'][0]['value'])) {
          $vars['classes_array'][] = $node['#node']->ou_profile['pdata']['group_layout_design']['group_light_dark']['field_oup_profile_layout_colour']['value']['und'][0]['value'];
        }
      }
    }
  }
}



/**
*
* Author: Mark Williams
*
* Return a list of local nodes on client website based on query of full profile and PIMS nodes on profile server
* in the form of a nice HTML list of links or an array of node ids
*
*/
function theme_get_profile_node_list($query = NULL, $type = "array") {
  // Include the local functions so that we can call the log command
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/people_functions.inc";

  $staff_nodes = ou_profile_get_profile_nodes($query, $type);
  if ($type == "list") {
    $staff_list = "";
    if (is_array($staff_nodes)) {
      foreach ($staff_nodes as $staff_node) {
         $staff_list .= "<li>" . $staff_node . "</li>\n";
      }
    }
    if ($staff_list) {
       $staff_list = "<ul>\n" . $staff_list . "</ul>";
    }
    else {
       $staff_list = "<p>No results found for query: $query</p>";
    }
    return $staff_list;
  }
  else {
    if (count($staff_nodes)) {
          return $staff_nodes;
    }
    else {
          return "<p>No results found for query: $query</p>";
    }
       }
}

/**
*
* Author: Mark Williams
*
* Return an array of expertise keywords for the client website's unit
*
*/
function theme_get_expertise_tags() {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/local_functions.inc";

  $a_site_info = ou_profile_lget_site_info();
  $unit_code = $a_site_info['unit_code'];
  $site_visibility = (int) $a_site_info['visibility'];

  // Set database to profiles
  db_set_active('profiles');

  // TODO: Rewrite me as db_query array
  $sql_query = "SELECT DISTINCT field_oup_expertise_value ";
  $sql_query .= "FROM {content_type_profile}, {content_type_pims}, {content_field_oup_expertise}, {content_type_privacy_value} ";
  $sql_query .= "WHERE content_field_oup_expertise.nid = content_type_profile.nid ";
  $sql_query .= "AND content_type_profile.field_oup_staff_id_value=content_type_pims.field_pims_staff_id_value ";
  $sql_query .= "AND content_type_profile.field_prv_expertise_nid=content_type_privacy_value.nid ";
  $sql_query .= "AND content_type_privacy_value.field_privacy_value_value>=" . $site_visibility . " ";
  $sql_query .= "AND content_type_pims.field_pims_l1_estab_unit_code_value=" . $unit_code . " ";
  $sql_query .= "AND content_field_oup_expertise.field_oup_expertise_value IS NOT NULL ";

  $sql_result = db_query($sql_query);

  $tags = array();
  while ($row = db_fetch_object($sql_result)) {
    $tags[] = $row->field_oup_expertise_value;
  }

  db_set_active();

  return $tags;
}

/**
 * Create custom meta-tags using nodewords API
 *
 */
function ou_profile_nodewords_tags_alter(&$tags, $parameters) {
  if ($GLOBALS['oup_meta_description']) {
    $tags['description'] = $GLOBALS['oup_meta_description'];
  }
}


/**
 * Implements hook_permission().
 *
 * Valid permissions for this module
 * @return array An array of valid permissions for the module
 */

function ou_profile_client_permission() {
  return array(
      'administer data load' => array(
          'title' => t('Force profile data load'),
          'description' => t('Start a load of the data that cron would usually trigger'),
      ),
  );
}

/**
* Implementation of hook_menu().
*/

function ou_profile_client_menu() {
  $items = array();

  $items['xml/%'] = array(
   'title' => 'xml',
   'page callback' => 'ou_profile_render_xml',
   'page arguments' => array(1),
   'access arguments' => array('access content'),
   'type' => MENU_CALLBACK,
   );

  // This is the behind the scenes config (which directories to use, debug levels, etc)
  $items['admin/config/system/ou_profile'] = array(
      'title' => 'OU Profile Settings',
      'description' => 'Import OU Profile content now.',
      'page callback' => 'ou_profile_client_config',
      'access arguments' => array('administer data load'),
      //'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

// TODO: Share these across both modules
function ou_profile_client_block_info() {
  $blocks['_people_search']= array(
      'info' => t("People search box"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
  );
  $blocks['_people_az']= array(
      'info' => t("People A-Z"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
  );

  return $blocks;
}

function ou_profile_client_block_view($delta = '') {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/block_functions.inc";

  switch ($delta) {
    case '_unit_list': // PIMS Units List
    $block = ou_profile_get_unit_list_block();
      break;
    case '_people_search': // People search box
    $block = ou_profile_get_people_search_block();
      break;
    case '_people_az': // People A-Z
    $block = ou_profile_get_people_list_block();
      break;
  }

  // Make sure the css is loaded to style the blocks correctly.
  if (!empty($block)) {
    $block['content']['#attached']['css'][] = drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css';
  }

  return $block;
}

/* List all available units on right of page */
function ou_profile_client_block($op='list', $delta = 0) {

  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
           // This list should only be visible to admins, but theres
              // no way to code that as a default. Anyone creating a profile server will
              // have to do this manually.

    $blocks['_unit_list'] = array(
      'info' => t("People PIMS Units List"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'region2',
      'pages' => 'my-profile',
    );
    $blocks['_people_search']= array(
      'info' => t("People search box"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
    );
    $blocks['_people_az']= array(
      'info' => t("People A-Z"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
    );

    return $blocks;
  }
  elseif ($op == 'view') {

    // Make sure the css is loaded to style the blocks correctly.
    drupal_add_css(drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css');

    $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
    require_once "$INCLUDES/block_functions.inc";

    switch ($delta) {

      case '_unit_list': // PIMS Units List
        $block = ou_profile_get_unit_list_block();
        break;
      case '_people_search': // People search box
        $block = ou_profile_get_people_search_block();
        break;
      case '_people_az': // People A-Z
        $block = ou_profile_get_people_list_block();
        break;
   }

    return $block;
  }
}

// Provide a way to automate the URL generation, rather than forcing the path
function ou_profile_client_token_list($type = 'all') {
  $tokens = array();

  if ($type == 'node' || $type == 'all') {
      $tokens['node']['ou_profile-oucu'] = t("The OUCU as understood by the profile module");
  }

  return $tokens;
}

function ou_profile_client_token_values($type, $object = NULL, $options = array()) {
    $values = array();

    if ($type == 'node' && !empty($object)) {
        $node = node_load($object->nid);
        $values['ou_profile-oucu'] = $node->field_oup_oucu[0]['value'];
        unset($node);
    }

    return $values;
}

function ou_profile_client_config() {
  $form = drupal_get_form('ou_profile_client_config_form');
  return t('OU Profile Import') . drupal_render($form);
}

/**
 * Builds the form to allow users to configure where the EDRM module should look for content
 * @param unknown_type $form_state
 */
function ou_profile_client_config_form($form_state) {
  $form['submit']=array('#type' => 'submit',
      '#value' => t('Refresh now'));

  return $form;
}

/**
 * Implements hook_form_submit().
 *
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function ou_profile_client_config_form_submit($form, &$form_state) {
  $INCLUDES = drupal_get_path('module', 'ou_profile_client') . "/../includes";
  require_once "$INCLUDES/local_functions.inc";

 // site is allowed to access the profiles system
  watchdog("ou_profile", "Running client cron");
  include drupal_get_path('module', 'ou_profile_client') . "/client_cron.inc";


  // Tell the user
  drupal_set_message(t('Data Reloaded'));

}

// function bt()
// {
//    array_walk( debug_backtrace(), create_function( '$a,$b', 'print "<br /><b>" . basename( $a[\'file\'] ). "</b> &nbsp; <font color=\"red\">{$a[\'line\']}</font> &nbsp; <font color=\"green\">{$a[\'function\']} ()</font> &nbsp; -- " . dirname( $a[\'file\'] ). "/";' ) );
// }
