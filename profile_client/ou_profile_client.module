<?php
/*
ini_set('display_errors', 1);
error_reporting(E_ALL ^ E_NOTICE);
*/

/**
 * Author: Stuart Crouch
 *
 *
 */

// Include the ou_profile local functions so we can use the log command
$INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
require_once "$INCLUDES/server_client_functions.inc";

$INCLUDES = drupal_get_path('module', 'ou_profile_client');
require_once "$INCLUDES/ou_profile_client.cron.inc";
require_once "$INCLUDES/ou_profile_client.admin.inc";


///////////////////////////////////
// NEW NODE API FUNCTIONS
///////////////////////////////////
$user_is_admin = FALSE;
$staff_id = NULL;
$oucu = NULL;

function ou_profile_client_node_load($nodes, $types) {

  if (count(array_intersect(array("profile", "ou_profile"), $types))) {

    foreach ($nodes as $node) {

       // Note - node types are as follows:
       //    ou_profile: used only on the client, contains only the staff id
       //    profile: used only on the server - this is the full profile

       //ou_profile_log("ou_profile_node_load $node->type");

       switch ($node->type) {
         case "ou_profile":

          // If we are asked to load this specific node,actually make a REST call and get the data
          $params = explode('/', $_GET['q']);
          if ((isset($params[0]) && $params[0] == 'node') && 
              (isset($params[1]) && $params[1] == $node->nid)) 
			  {
					if (isset($node->field_pims_unique_id['und'][0]['value'])) 
					{
						$unique_id = $node->field_pims_unique_id['und'][0]['value'];
						$staff_id = substr($unique_id, 0,  8);
						$node->ou_profile = ou_profile_client_rest_call($staff_id);
					}
            break;
          }
           // If we arent looking at the node page 
           //(eg we are getting a list instead), then just exit this function
           // and let drupal return whats in the database
       }
    }
  }
}

//REST call to get the data for $node->ou_profile for display
function ou_profile_client_rest_call($param) {

  ou_profile_log( "Getting profile data" );

  $request_url = ou_profile_get_request_url();
  
  $headers = array();
  $options = array(
      'headers' => array(
          'Accept' => 'application/json',
          'Referer' => $GLOBALS['base_url'],
      ),
      'method' => 'GET',
      //'data' => $data
  );
  $response = drupal_http_request($request_url . '/services/ou_site_profile/' . $param, $options);
  $data = json_decode($response->data,true);

  return $data;
}


//REST call to get TIDS decriptions
function ou_profile_client_get_tid_rest_call( $tid )
{

	$request_url = ou_profile_get_request_url();

	$options = array(
		'headers' => array(
		'Accept' => 'application/json',
		'Referer' => $GLOBALS['base_url'],
		),
		'method' => 'GET',
	);
	
	//The last element in the URl '/list' doesn't do anything. Rest call would not work without us sending a parameter, so I'm just sending a value that's never used
	$response = drupal_http_request($request_url . '/services/ou_profile_get_taxonomy_tree/'.$tid, $options);
	
	$data = json_decode( $response->data, true );
	return $data;
}



//REST call to get PIMS & Profile NIDs that the site is allowed to access
function ou_profile_client_all_nids_rest_call()
{

	$request_url = ou_profile_get_request_url();

	$headers = array();
	$options = array(
		'headers' => array(
		'Accept' => 'application/json',
		'Referer' => $GLOBALS['base_url'],
		),
		'method' => 'GET',
	);
	
	//The last element in the URl '/list' doesn't do anything. Rest call would not work without us sending a parameter, so I'm just sending a value that's never used
	$response = drupal_http_request($request_url . '/services/ou_profile_nid_list/list', $options);
	
	//Returns an associative array, ['pims_entity_id']
	//									['pims_entity_id']
	//									['profile_entity_id']
	//									['puid']
	$data = json_decode( $response->data, true );
	return $data;
}


//REST call to get PIMS & Profile NIDs that the site is allowed to access
function ou_profile_client_get_pp_node( $nid )
{

	$request_url = ou_profile_get_request_url();

	$headers = array();
	$options = array(
		'headers' => array(
		'Accept' => 'application/json',
		'Referer' => $GLOBALS['base_url'],
		),
		'method' => 'GET',
	);
	
	//The last element in the URl '/list' doesn't do anything. Rest call would not work without us sending a parameter, so I'm just sending a value that's never used
	$response = drupal_http_request($request_url . '/services/ou_profile_get_node/'.$nid, $options);
	$data = json_decode( $response->data, true );
	return $data;
}


/////////////////////////////////////////////// VIEW NODES //////////////////////////////////////////////


function ou_profile_client_node_view($node, $view_mode, $langcode) {

	drupal_add_css(drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css');
	drupal_add_js( drupal_get_path('module', 'ou_profile') .'/shared/ou_profile_tabs.js');

	switch ($node->type)
	{
/*
		case "profile":
			//SK - This doesn't seem to be triggered? Also, function is in server module?!
			ou_profile_node_view_profile($node, $view_mode, $langcode);
		break;
		
		case "profile_page":
			//SK - This doesn't seem to be triggered? Also, function is in server module?!
			ou_profile_node_view_profile_page($node, $view_mode, $langcode);
		break;
*/		
		case "ou_profile":
			//Opening a profile on a client site...

			// Set the canonical
			if( isset( $node->field_oup_oucu['und'][0]['value'] ) )
			{
				$oucu = $node->field_oup_oucu['und'][0]['value'];
				drupal_add_html_head_link( array( 'rel' => 'canonical', 'href' => url( 'http://www.open.ac.uk/people/'.$oucu, array('absolute' => FALSE) ) ), TRUE );
			}
		break;
	}


}

function ou_profile_client_theme($existing, $type, $theme, $path)
{
	$theme_path = drupal_get_path('module', 'ou_profile') . "/shared";
	return array(
		'node--profile' => array(
			'variables' => array('content' => NULL, 'node' => NULL, 'classes' => NULL),
			'template' => 'node--profile',
			'path' => $theme_path,
		),
		'page--profile' => array(
			'variables' => array('content' => NULL, 'node' => NULL, 'classes' => NULL),
			'template' => 'page--profile',
			'path' => $theme_path,
		)
	);
}

function ou_profile_client_preprocess_node(&$vars) {
  // Here is the way to switch to a different node-<something> template based on node properties.
  // We use this so that profile and ou_profile can share the same template file.
  if($vars['type'] == 'profile' || $vars['type'] == 'ou_profile') {

    ou_profile_log("ou_profile_client_preprocess_node");

    $vars['theme_hook_suggestions'] = array(
          'node--profile',
    );
  }

  return $vars;
}

function ou_profile_client_preprocess_page(&$vars) {
  // Dont do these suggestions if we are on the edit page.
  // Cant find a better way to tell if thats where we are...
  $params = explode('/', $_GET['q']);
  if (isset($params[2]) && $params[2] == 'edit')
    return $vars;

  // Here is the way to switch to a different page-<something> template based on node properties.
  // We use this so that profile and ou_profile can share the same template file.
  if (isset($vars['node'])) {

    if ($vars['node']->type == 'profile' || $vars['node']->type == 'ou_profile') {

      $vars['theme_hook_suggestions'] = array(
          'page--profile',
      );
    }
  }

  return $vars;
  
}

function ou_profile_client_preprocess_html(&$vars) {
  ou_profile_client_add_body_classes($vars);
}

function ou_profile_client_add_body_classes(&$vars)
{
	// Do an easy check to see if this is a profile page  
	if (in_array('node-type-ou-profile', $vars['classes_array']))
	{
		if (isset($vars['page']['content']['system_main']['nodes']))
		{
			$node = reset($vars['page']['content']['system_main']['nodes']);
			if (isset($node))
			{
				// Any changes to the server admin page layout means this array needs re-writing....
				if (isset($node['#node']->ou_profile['pdata']['group_layout_design']['group_layout']['field_oup_profile_layout']['value']['und'][0]['value'])) 
				{
					$vars['classes_array'][] = $node['#node']->ou_profile['pdata']['group_layout_design']['group_layout']['field_oup_profile_layout']['value']['und'][0]['value'];
				} else {
					$vars['classes_array'][] = 'p2cl';
				}
				if (isset($node['#node']->ou_profile['pdata']['group_layout_design']['group_light_dark']['field_oup_profile_layout_colour']['value']['und'][0]['value']))
				{
					$vars['classes_array'][] = $node['#node']->ou_profile['pdata']['group_layout_design']['group_light_dark']['field_oup_profile_layout_colour']['value']['und'][0]['value'];
				} else {
					$vars['classes_array'][] = 'light';
				}
			}
		}
	}
}

/**
*
* Author: Mark Williams
*
* Return a list of local nodes on client website based on query of full profile and PIMS nodes on profile server
* in the form of a nice HTML list of links or an array of node ids
*
*/
/*
function theme_get_profile_node_list($query = NULL, $type = "array") {
  // Include the local functions so that we can call the log command
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/people_functions.inc";

  $staff_nodes = ou_profile_get_profile_nodes($type);
  if ($type == "list") {
    $staff_list = "";
    if (is_array($staff_nodes)) {
      foreach ($staff_nodes as $staff_node) {
         $staff_list .= "<li>" . $staff_node . "</li>\n";
      }
    }
    if ($staff_list) {
       $staff_list = "<ul>\n" . $staff_list . "</ul>";
    }
    else {
       $staff_list = "<p>No results found for query: $query</p>";
    }
    return $staff_list;
  }
  else {
    if (count($staff_nodes)) {
          return $staff_nodes;
    }
    else {
          return "<p>No results found for query: $query</p>";
    }
       }
}
*/

/**
 * Create custom meta-tags using nodewords API
 *
 */
function ou_profile_client_nodewords_tags_alter(&$tags, $parameters) {
  if ($GLOBALS['oup_meta_description']) {
    $tags['description'] = $GLOBALS['oup_meta_description'];
  }
}


/**
 * Implements hook_permission().
 *
 * Valid permissions for this module
 * @return array An array of valid permissions for the module
 */

function ou_profile_client_permission() {
  return array(
      'administer data load' => array(
          'title' => t('Force profile data load'),
          'description' => t('Start a load of the data that cron would usually trigger'),
      ),
  );
}

/**
* Implementation of hook_menu().
*/

function ou_profile_client_menu() {
  $items = array();

  // This is the behind the scenes config (which directories to use, debug levels, etc)
  $items['admin/config/system/ou_profile'] = array(
      'title' => 'OU Profile Settings',
      'description' => 'Import OU Profile content now.',
      'page callback' => 'ou_profile_client_config',
      'access arguments' => array('administer data load'),
      //'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
* Implementation of hook_block_info()
*
*/

/*
// TODO: Share these across both modules
function ou_profile_client_block_info() {
  $blocks = array();
  $blocks['_people_search']= array(
      'info' => t("People search box"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
  );
  $blocks['_people_az']= array(
      'info' => t("People A-Z"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
  );
  return( $blocks );
}

/**
* Implementation of hook_block_view()
*
*/
/*
function ou_profile_client_block_view($delta = '') {
  $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
  require_once "$INCLUDES/block_functions.inc";

  switch ($delta) {
    case '_unit_list': // PIMS Units List
    $block = ou_profile_get_unit_list_block();
      break;
    case '_people_search': // People search box
    $block = ou_profile_get_people_search_block();
      break;
    case '_people_az': // People A-Z
    $block = ou_profile_get_people_list_block();
      break;
  }

  // Make sure the css is loaded to style the blocks correctly.
  if (!empty($block)) {
    $block['content']['#attached']['css'][] = drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css';
  }

  return $block;
}

/* List all available units on right of page */
/*
function ou_profile_client_block($op='list', $delta = 0) {

  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
           // This list should only be visible to admins, but theres
              // no way to code that as a default. Anyone creating a profile server will
              // have to do this manually.

    $blocks['_unit_list'] = array(
      'info' => t("People PIMS Units List"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'region2',
      'pages' => 'my-profile',
    );
    $blocks['_people_search']= array(
      'info' => t("People search box"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
    );
    $blocks['_people_az']= array(
      'info' => t("People A-Z"),
      'status' => TRUE,
      'visibility' => 1,
      'region' => 'content',
      'pages' => 'people/people-search',
    );

    return $blocks;
  }
  elseif ($op == 'view') {

    // Make sure the css is loaded to style the blocks correctly.
    drupal_add_css(drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css');

    $INCLUDES = drupal_get_path('module', 'ou_profile') . "/includes";
    require_once "$INCLUDES/block_functions.inc";

    switch ($delta) {

      case '_unit_list': // PIMS Units List
        $block = ou_profile_get_unit_list_block();
        break;
      case '_people_search': // People search box
        $block = ou_profile_get_people_search_block();
        break;
      case '_people_az': // People A-Z
        $block = ou_profile_get_people_list_block();
        break;
   }

    return $block;
  }
}
*/

// Provide a way to automate the URL generation, rather than forcing the path
function ou_profile_client_token_list($type = 'all') {
  $tokens = array();

  if ($type == 'node' || $type == 'all') {
      $tokens['node']['ou_profile-oucu'] = t("The OUCU as understood by the profile module");
  }

  return $tokens;
}

function ou_profile_client_token_values($type, $object = NULL, $options = array()) {
    $values = array();

    if ($type == 'node' && !empty($object)) {
        $node = node_load($object->nid);
        $values['ou_profile-oucu'] = $node->field_oup_oucu[0]['value'];
        unset($node);
    }

    return $values;
}


// function bt()
// {
//    array_walk( debug_backtrace(), create_function( '$a,$b', 'print "<br /><b>" . basename( $a[\'file\'] ). "</b> &nbsp; <font color=\"red\">{$a[\'line\']}</font> &nbsp; <font color=\"green\">{$a[\'function\']} ()</font> &nbsp; -- " . dirname( $a[\'file\'] ). "/";' ) );
// }

/**
 *
 Implements hook_views_post_render(&$view, &$output, &$cache)
 *
 */
function ou_profile_client_views_post_render(&$view, &$output, &$cache)
{
	if( !$view->editing )
	{
		//Adds the profile stylesheet to the view
		if( $view->name == 'people' || $view->name == 'research_profiles' )
		{
		  drupal_add_css(drupal_get_path('module', 'ou_profile') . '/includes/ou_profile_styles.css');
		}
		
		if( $view->name == 'people' || ( $view->name == 'research_profiles' && $view->current_display =='people_by_atoz' ) )
		{
		  drupal_add_js( drupal_get_path('module', 'ou_profile_client') .'/ou_profile_client.js');
		}
	}
}

?>